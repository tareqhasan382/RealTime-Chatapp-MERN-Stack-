const dotenv = require("dotenv");
const app = require("./app");
const mongoose = require("mongoose");
const config = require("./config/config");
const jwt = require("jsonwebtoken");
const socketIO = require("socket.io");
dotenv.config();

//=======uncaught Exception handle=======
process.on("uncaughtException", (error) => {
  console.log(error);
  process.exit(1);
});

async function main() {
  let server;

  try {
    await mongoose.connect(config.database_url, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    console.log(`Database is connected successfully`);

    server = app.listen(process.env.PORT, () => {
      console.log(`Application app listening on port ${process.env.PORT}`);
    });
    //==========socket start====================
    // Socket.IO integration
    // const io = socketIO(server, {
    //   transports: ["websocket", "polling"],
    // });

    const io = socketIO(server);

    io.on("connection", (socket) => {
      console.log("A user connected");

      // Handle socket events here

      socket.on("chatMessage", (message) => {
        // Broadcast the message to all connected clients
        io.emit("chatMessage", message);
      });

      socket.on("disconnect", () => {
        console.log("User disconnected");
      });
    });
    //==========socket end====================
  } catch (error) {
    console.log("Failed to connect to the Database", error);
  }

  process.on("unhandledRejection", (error) => {
    if (server) {
      server.close(() => {
        console.log(error);
        process.exit(1);
      });
    } else {
      process.exit(1);
    }
  });

  process.on("SIGTERM", () => {
    console.log("SIGTERM is received");
    if (server) {
      server.close();
    }
  });
}

main();
